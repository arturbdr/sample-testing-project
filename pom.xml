<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>sample-testing-project</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>sample-testing-project</name>
    <description>Example of testing with guidelines</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.4.RELEASE</version>
        <relativePath/>
    </parent>

    <properties>
        <fixture-factory.version>3.1.0</fixture-factory.version>
        <fongo.version>2.1.0</fongo.version>
        <gmavenplus-plugin.version>1.6.2</gmavenplus-plugin.version>
        <jacoco-maven-plugin.version>0.8.3</jacoco-maven-plugin.version>
        <java.version>1.8</java.version>
        <pitest-maven.mutationThreshold>75</pitest-maven.mutationThreshold>
        <pitest-maven.version>1.4.6</pitest-maven.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spock-spring.version>1.3-groovy-2.5</spock-spring.version>
        <spotbugs-annotations.version>3.1.12</spotbugs-annotations.version>
        <springfox-swagger2.version>2.9.2</springfox-swagger2.version>

        <!-- Sonar configuration  -->
        <sonar.coverage.exclusions>
            <!--insert here all files to not be coverage by SonarQube-->
            <!--JaCoCo should be configured down below-->
            **/example/sampletestingproject/config/**,
            **/example/sampletestingproject/gateway/http/mapping/**,
            **/example/sampletestingproject/SampleTestingProjectApplication.java,
            **/example/sampletestingproject/domain/**,
            **/example/sampletestingproject/gateway/http/json/**
        </sonar.coverage.exclusions>
        <sonar.exclusions>
            **/example/sampletestingproject/SampleTestingProjectApplication.java
        </sonar.exclusions>
        <sonar.groovy.binaries>target/classes,target/test-classes</sonar.groovy.binaries>
        <sonar.jacoco.reportPath>target/jacoco.exec</sonar.jacoco.reportPath>
        <sonar.java.binaries>target/classes</sonar.java.binaries>
        <sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
        <sonar.sources>src/main/java</sonar.sources>
        <sonar.tests>src/test/groovy,src/test/java</sonar.tests>

    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!--Swagger dependencies -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox-swagger2.version}</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox-swagger2.version}</version>
        </dependency>

        <!-- MongoDB in memory for integration tests-->
        <dependency>
            <groupId>de.flapdoodle.embed</groupId>
            <artifactId>de.flapdoodle.embed.mongo</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!--Required dependency for Spock tests-->
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <version>${spock-spring.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-spring</artifactId>
            <version>${spock-spring.version}</version>
            <scope>test</scope>
        </dependency>

        <!--Required dependency to use templates for testing-->
        <dependency>
            <groupId>br.com.six2six</groupId>
            <artifactId>fixture-factory</artifactId>
            <version>${fixture-factory.version}</version>
            <scope>test</scope>
        </dependency>

        <!--Dependency used to ignore findbugs on Lombok annotations-->
        <!--Check the class User.java for the annotation SuppressFBWarnings-->
        <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-annotations</artifactId>
            <version>${spotbugs-annotations.version}</version>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>${gmavenplus-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compileTests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>

                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-check</id>
                        <phase>test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>CLASS</element>
                                    <limits>
                                        <limit>
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.90</minimum>
                                        </limit>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.90</minimum>
                                        </limit>
                                    </limits>
                                    <excludes>
                                        <!--Remove module Startup class-->
                                        <exclude>com.example.sampletestingproject.SampleTestingProjectApplication
                                        </exclude>

                                        <!--Remove module URLMapping class-->
                                        <exclude>com.example.sampletestingproject.gateway.http.mapping.URLMapping
                                        </exclude>

                                        <!--Remove, in this order, config, domain and json classes-->
                                        <exclude>com.example.sampletestingproject.config.*</exclude>
                                        <exclude>com.example.sampletestingproject.domain.*</exclude>
                                        <exclude>com.example.sampletestingproject.gateway.http.json.*</exclude>
                                    </excludes>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--  Pluggin for UNIT test-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <useFile>true</useFile>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*Spec.java</include>
                    </includes>
                </configuration>
            </plugin>

            <!--  Pluggin for INTEGRATION test-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <!--
                        Ensures that both integration-test and verify goals of the Failsafe Maven
                        plugin are executed.
                    -->
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the VM argument line used when integration tests are run. -->
                            <argLine>${failsafeArgLine}</argLine>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Mutation test plugin. Execute org.pitest:pitest-maven:mutationCoverage to use it -->
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>${pitest-maven.version}</version>
                <configuration>
                    <!--<mutationThreshold>${pitest-maven.mutationThreshold}</mutationThreshold>-->
                    <targetClasses>
                        <param>com.example.sampletestingproject.*</param>
                    </targetClasses>
                    <targetTests>
                        <param>com.example.sampletestingproject.*</param>
                    </targetTests>
                </configuration>
            </plugin>

            <!--Plugging to check if there are new versions of dependencies and plugins-->
            <!--To run it: mvn versions:display-dependency-updates
            or mvn versions:display-plugin-updates -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
